apiVersion: sql.databases/v1beta2
kind: Galera
metadata:
  name: gal
  namespace: galera
  ## Adding this annotation make this cluster managed by clusterwide operators
  ## namespaced operators ignore it
  #annotations:
  #  sql.databases/scope: clusterwide
  labels:
    stage: dev
    owner: sebs42
    galera-cluster: galera
spec:
  replicas: 3
  pod:
    credentialsSecret:
      name: galera-secret
    image: sebs42/mariadb:10.4.2-bionic
#    image: sebs42/mariadb:10.4.12-bionic
    mycnfConfigMap:
      name: galeraconf
    resources:
      requests:
        cpu: 500m
        memory: 2Gi
      limits:
        cpu: 1000m
        memory: 4Gi
    env:
      - name: MYSQL_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: galera-secret
            key: password
#        value: "test"
      - name: EXPORTER_PASSWORD
        valueFrom:
          secretKeyRef:
            name: galera-secret
            key: exporter-password
#        value: "etest"
    metric:
      image: prom/mysqld-exporter:v0.12.1
      env:
        - name: DATA_SOURCE_NAME
#          value: exporter:${EXPORTER_PASSWORD}@(localhost:3306)
          value: "root:test@(localhost:3306)/"
      resources:
        requests:
          cpu: 100m
          memory: 1Gi
        limits:
          cpu: 200m
          memory: 2Gi
      port: 9104
    priorityClassName: database-priority
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: galera-cluster
                  operator: In
                  values:
                    - galera
            topologyKey: kubernetes.io/hostname
  persistentVolumeClaimSpec:
    accessModes: [ "ReadWriteOnce" ]
#    storageClassName: local-ssd
    resources:
      requests:
        storage: 50Gi
